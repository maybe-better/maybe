#define TGID_OFFSET(FIRST_PROCESS_ENTRY+ARRTY_SIZE(proc_base_stuff))
int proc_pid_readdir(struct file*filp,void*dirent,filldir_t filldir)
{
    unsigned int nr=filp->f_pos-FIRST_PROCESS_RNTRY;
    struct task_struct*reaper=get_proc_task(filp->f_path.denty->d_inode);
    struct task_struct*task;
    int tgid;
    for(;nr<ARRAY_SIZE(proc_base_stuff);filp->f_pos++,nr++)
    {
        const struct pid_entry*p=&proc_base_stuff[nr];
        if(proc_base_fill_cache(filp,dirent,filldir,reaper,p)<0)
            goto out;
    }
    tgid=filp->f_pos-TGID_OFFSET;
    for(task=next_tgid(tgid);
        task;
        put_task_struct(task),task=next_tgid(tgid+1))
        {
            tgid=task->pid;
            filp->f_pos=tgid+TGID_OFFSET;
            if(proc_pid_fill_cache(filp,dirent,filldir,task,tgid)<0)
            { 
                put_task_struct(task);
                goto out;
            }
        }
        filp->f_pos=PID_MAX_LIMIT+TGID_OFFSET;
        out:
        put_task_struct(reaper);
        out_no_task;
        return();
    }
        
            
